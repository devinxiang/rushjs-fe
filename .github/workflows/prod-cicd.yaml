name: Build and Deploy

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:



env:
  APP_NAME: nextjs-start

jobs:
  build-and-deploy:
    if: github.event.pull_request.merged && contains(github.event.pull_request.labels.*.name, 'nextjs-start-deploy-prod-ready')
    runs-on: ubuntu-latest
    steps:
      - name: echo variants
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

        run: echo "$GITHUB_CONTEXT"
      - name: Github API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR information
        id: pr_data
        run: |
          echo "branch=${{ fromJson(steps.request.outputs.data).head.ref }}" >> $GITHUB_OUTPUT
          echo "repo_name=${{ fromJson(steps.request.outputs.data).base.repo.full_name }}" >> $GITHUB_OUTPUT
          echo "repo_clone_url=${{ fromJson(steps.request.outputs.data).base.repo.clone_url }}" >> $GITHUB_OUTPUT
          echo "repo_ssh_url=${{ fromJson(steps.request.outputs.data).base.repo.ssh_url }}" >> $GITHUB_OUTPUT

      - name: Echo variants
        run: |
          echo "${{ steps.pr_data.outputs.repo_ssh_url }}"
          echo "${{ steps.pr_data.outputs.repo_clone_url }}"

      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ fromJson(steps.request.outputs.data).head.repo.full_name }}
          ref: ${{ steps.pr_data.outputs.branch }}
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Rush
        uses: actions/cache@v2
        with:
          path: |
            common/temp/install-run
            ~/.rush
          key: ${{ runner.os }}-${{ hashFiles('rush.json') }}

      - name: Cache pnpm
        uses: actions/cache@v2
        with:
          path: |
            common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: rushjs Install üîß # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          node common/scripts/install-run-rush.js install -t ${APP_NAME}

      - name: rushjs Build üîß
        run: |
          node common/scripts/install-run-rush.js build -t ${APP_NAME}

      - name: rushjs deploy üîß
        run: |
            node common/scripts/install-run-rush.js deploy -p ${APP_NAME}
# time DOCKER_BUILDKIT=1 docker build --no-cache -f apps/${APP_NAME}/Dockerfile .
      - name: docker build üîß
        run: |
          time DOCKER_BUILDKIT=1 docker build --no-cache -f apps/${APP_NAME}/Dockerfile . -t nextjs-start-image
      - name: See current ls
        run: |
            ls -R apps/nextjs-start
      - name: See current  ls -R apps/nextjs-start
        run: |
            ls -R apps/nextjs-start
      - name: See current  ls -R apps/nextjs-start
        run: |
            ls -R apps/nextjs-start/.next
      - name: Add release label
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["deploy-nextjs-start"]
            })
