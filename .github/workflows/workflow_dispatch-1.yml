name: workflow_dispatch deploy the 'main' branch or a tag scheduler

on:
  workflow_dispatch:
    inputs:
      project:
        description: "Release the project manually."
        required: true
        default: "web-ui"
        type: string
      env:
        description: "Choose the environment for deployment."
        required: true
        default: "testnet"
        type: string
      ref:
        description: "Specify the branch or a tag to deploy"
        required: true
        default: "main"
        type: string
jobs:
  pre-check:
    runs-on: ubuntu-latest
    if: ((github.event.inputs.project == 'web-ui') && ((github.event.inputs.env == 'testnet') || (github.event.inputs.env == 'mainnet')))
    outputs:
      codeowners: ${{ steps.codeowners.outputs.content }}
      is_valid_ref: ${{ steps.check_ref.outputs.is_valid_ref }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Read codeowners
      id: codeowners
      uses: juliangruber/read-file-action@v1
      with:
        path: .github/CODEOWNERS
    - name: Check if tag exists on main branch (Optimized and Error Handling)
      id: check_ref
      run: |
        REF="${{ github.event.inputs.ref }}"
        MAIN_BRANCH="main"
        IS_VALID_REF="false"
        ERROR_MESSAGE=""

        # Ensure tags are fetched
        git fetch --tags

        if [ "$REF" == "$MAIN_BRANCH" ]; then
          IS_VALID_REF="true"
        elif git tag -l | grep -q "^${REF}$"; then
          TAG_SHA=$(git rev-parse "$REF")
          MAIN_SHA=$(git rev-parse "$MAIN_BRANCH")
          COMMON_SHA=$(git merge-base "$TAG_SHA" "$MAIN_SHA")
          if [ "$TAG_SHA" == "$COMMON_SHA" ]; then
            IS_VALID_REF="true"
          else
            ERROR_MESSAGE="Tag $REF does not exist on the $MAIN_BRANCH branch."
          fi
        else
          ERROR_MESSAGE="Ref $REF is neither $MAIN_BRANCH nor a valid tag."
        fi

        echo "IS_VALID_REF=$IS_VALID_REF"
        echo "ERROR_MESSAGE=$ERROR_MESSAGE"
        echo "::set-output name=is_valid_ref::$IS_VALID_REF"
        echo "::set-output name=error_message::$ERROR_MESSAGE"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-codeowners:
    runs-on: ubuntu-latest
    needs: [pre-check]
    if: (!contains(needs.pre-check.outputs.codeowners, github.event.comment.user.login))
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Create Version Comment
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.issue.number }}
        comment-id: ${{ github.event.comment.id }}
        body: |
          ++++++
          Deployment request denied. Please ensure you have the necessary permissions by contacting the project code owners.
        reactions: rocket
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  web-ui-prod-deploy:
    runs-on: ubuntu-latest
    needs: [pre-check]
    if: ((needs.pre-check.outputs.is_valid_ref == 'valid') && (inputs.project == 'web-ui') && (inputs.env == 'mainnet'))
    name: Mock Deploy
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4